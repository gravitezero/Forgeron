name: index
title: A simple static site generator
template: index
footer: footer

<header>
![Handcrafted](png/icon.png)
</header>

Forgeron
========

Forgeron is static site generator written in Nodejs, it's greatly inspired by flatiron's [Blacksmith](https://github.com/flatiron/blacksmith).  
The name is the french translation for blacksmith. (I'm french, and I liked the idea of a blacksmith hitting your contents against your templates).

For the moment, Forgeron is only an apprentice, but it still can do some nice gears, like this small site.

Why use it ?
============

Why should you use Forgeron instead of others CMS or site generators.

I think that for web site with small content generation (exactly like blogs), no needs for the server to do extra binding works.
So, by compiling my websites only at each content generation, I let my servers chill out, save electricity, reduce carbon impacts, and at the end, yes, I saved earth. 

Forgeron is very flexible, it can make both your simple holiday blog, and a very large website with lots of pages.
I never tested it on a very large scale, but it should works flawlessly.

Forgeron will be able to not regenerate the content that didn't change.

Forgeron will give you a dev version of your website, specially to adjust templates and styles.

Also, Forgeron is fully made with love and compassion :)

How to use it ?
===============

Forgeron basically copy and transform files from sources directory, to public directory.  

Forgeron currently understand 3 kind of files : html, mdwn and less.

- **less** files are the stylesheets, they are converted to css.  
- **mdwn** files are the pages content.  
- **html** files are the pages templates.  

Forgeron will take every page, bind it to a template and put it in the same path in the public directory.  

Each page contains the page content, written in markdown, plus the meta data.
Forgeron is very flexible about metadata, he understand some few basic command, and for *every* meta data he don't understand, he will try to bind it to the template.  

## Meta data

- **template** specify the template name (not path, that's mean no doublon, or it will crash).
- **header** will bind a specific page with its template before the current page content, or in the header tag is there is one.
- **footer** will bind a specific page with its template after the current page content, or in the footer tag is there is one.
- **assets** does nothing for the moment, but it might be useful later
- **collection** does nothin neither, but in a futur release, it will gather every page in a folder, then add them after the current page content.
- **content** is the marked content of the page.


## Binding

Forgeron take all these meta data to build a document.
Each key in the metadata is a selector to find the tag to bind to in the template.
For example :

- the date meta data will be bound to the date tag in the page.
- the #author will be bound to the tag with the author id.
- the .tags will be bound to the tag with the tags class.
