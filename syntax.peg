{
  var article = {};
}

start
  = Tuples

Tuples
  = tuple:Tuple tuples:(EOL+ Tuples)? {

   return article;

    //if (tuples)
      //return "+-> " + tuple + '\n' + tuples[1]
    //else
      //return "-->" + tuple
  }

Tuple
  = left:Selector Spaces? Assign_char Spaces? right:Content Spaces* {
  
  article[left] = right;

  return left + ' = ' + right
}

Selector
  = selector:Word {return selector}

Content
  = text:(Text / Paragraph)
{return text}

Bracket_text
  = '(' (!')' chars:Char+) ')' {return chars.join('')}

Curly_text
  = '{' (!'}' chars:Char+) '}' {return chars.join('')}

Normal_text
  = chars:(Characters / Spaces)+ {return chars.join('')}

Text
  = Bracket_text
  / Curly_text
  / Normal_text

Paragraph_line
  = Tab_char text:Text+ {

    if (text == '')
      return '-';

    return text;
  }

Paragraph
  = EOL? line:Paragraph_line next:(EOL+ Paragraph)? {

  if (next)
    return line + next[0].join('') + next[1]
  else
    return line
  }

Word
  = chars:Characters+ { return chars.join('') }

Spaces
  = spaces:" "+ { return spaces.join("") }

EOL
  = space:Spaces* eol:"\n"+ {return eol.join('')}

Characters
  = [.#a-zA-Z0-9\[\]=^'"(),]

Char
  = .

Assign_char
  = [:]

Tab_char
  = "  "